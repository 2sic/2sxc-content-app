/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/ts/scripts.ts");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./src/ts/scripts.ts":
/*!***************************!*\
  !*** ./src/ts/scripts.ts ***!
  \***************************/
/*! no static exports found */
/***/ (function(module, exports) {

$(document).ready(function () {
    /* mailencrypting */
    setTimeout(function () {
        $('[data-madr1]').not('.madr-done').each(function () {
            var $this = $(this);
            var maddr = $this.attr('data-madr1') + '@' + $this.attr('data-madr2') + '.' + $this.attr('data-madr3');
            var linktext = $this.attr('data-linktext') ? $this.attr('data-linktext') : maddr;
            $this.after('<a href="mailto:' + maddr + '">' + linktext + '</a> ');
            $this.addClass('madr-done').hide();
        });
    }, 500);
    /* Fancybox */
    if ($('.fancybox').fancybox) {
        $('.fancybox').fancybox({
            parent: 'form:first',
            padding: 1
        });
    }
});
/* Google Maps API Key */
(function ($) {
    var winAny = window;
    // Change this GoogleApiKey. Get it on Google API Console (https://console.developers.google.com/apis/)
    // read instructions here: https://github.com/2sic/2sxc-content-app/wiki/google-maps-api-key
    var googleApiKey = winAny.googleMapsApiKey;
    if (!googleApiKey)
        return;
    var showApiKeyWarning = googleApiKey.indexOf("warning!") > -1;
    googleApiKey = googleApiKey.replace("warning!", "");
    // the init-code
    function initGoogleMaps() {
        // if this had already been run, stop here
        if ($.fn.toGoogleMap) {
            return;
        }
        var googleMapLoadDeferred = $.Deferred();
        $.fn.toGoogleMap = function (options) {
            var mapElement = this.get(0);
            googleMapLoadDeferred.promise().then(function () {
                var settings = $.extend({
                    position: {
                        lat: 0,
                        lng: 0
                    },
                    zoom: 8,
                    mapTypeId: "HYBRID",
                    infoWindowHtml: "",
                    showInfoWindow: true
                }, options);
                var mapOptions = {
                    zoom: settings.zoom,
                    mapTypeControl: true,
                    center: settings.position,
                    zoomControl: true,
                    scaleControl: true,
                    scrollwheel: false,
                    mapTypeId: google.maps.MapTypeId[settings.mapTypeId]
                };
                var map = new google.maps.Map(mapElement, mapOptions);
                // Create Marker
                var marker = new google.maps.Marker({
                    position: settings.position,
                    map: map,
                    icon: settings.icon
                });
                if (settings.infoWindowHtml && settings.infoWindowHtml !== '') {
                    // Create InfoWindow
                    var infoWindow = new google.maps.InfoWindow({
                        content: settings.infoWindowHtml
                    });
                    // Add Event listener
                    google.maps.event.addListener(marker, 'click', function () {
                        infoWindow.open(map, marker);
                    });
                }
                google.maps.event.addListenerOnce(map, 'idle', function () {
                    if (settings.showInfoWindow)
                        infoWindow.open(map, marker);
                });
            });
            return this;
        };
        // Register google map load callback
        winAny.googleMapLoadCallback = function () {
            googleMapLoadDeferred.resolve(true);
        };
        if (!winAny.googleMapsLoaded) {
            winAny.googleMapsLoaded = true;
            $.getScript("//maps.google.com/maps/api/js?key=" + googleApiKey + "&sensor=true&callback=googleMapLoadCallback");
        }
    }
    // check if it's the original key, which shouldn't be used in live sites
    // do not turn this off, it's important!
    // to disable the warning, replace the API key as explained on //github.com/2sic/2sxc-content-bootstrap3/wiki/google-maps-api-key
    function showWarningIfDemoKeyIsUsed() {
        if (showApiKeyWarning) {
            $('.co-google-map-container').append('<p class="alert alert-danger googlemap-apiwarning"><strong>Warning:</strong> This map uses a demo API-Key, which will cause problems on live web sites. Change the GoogleApiKey using <a class="alert-link target="_blank" href="https://azing.org/2sxc/r/ippFQYkz" target="_blank">these instructions</a></p>');
        }
    }
    $(showWarningIfDemoKeyIsUsed);
    initGoogleMaps();
}(jQuery));


/***/ })

/******/ });
//# sourceMappingURL=scripts.min.js.map