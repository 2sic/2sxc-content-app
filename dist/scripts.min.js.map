{"version":3,"sources":["webpack://2sic-bootstrap-content-templates/./src/ts/content-fancybox.ts","webpack://2sic-bootstrap-content-templates/./src/ts/get-script.ts","webpack://2sic-bootstrap-content-templates/./src/ts/google-maps.ts","webpack://2sic-bootstrap-content-templates/./src/ts/google-maps/maps-jquery.ts","webpack://2sic-bootstrap-content-templates/./src/ts/jquery-fade-in.ts","webpack://2sic-bootstrap-content-templates/./src/ts/mail-obfuscator.ts","webpack://2sic-bootstrap-content-templates/./src/ts/youtube-preview.ts","webpack://2sic-bootstrap-content-templates/webpack/bootstrap","webpack://2sic-bootstrap-content-templates/./src/ts/index.ts"],"names":["$","fancybox","source","callback","script","document","createElement","prior","getElementsByTagName","async","onload","onreadystatechange","_","isAbort","readyState","test","undefined","setTimeout","src","parentNode","insertBefore","debug","winAny","window","globalCallbackName","alreadyActivating","activate","turnOn","console","log","googleMapsApiKey","this","loadPromise","Deferred","googleMapsLoading","keyWithoutWarning","resolve","activateTurnOnMap","getScript","turnOnMap","id","marker","zoom","lat","lng","info","warn","arguments","toGoogleMap","position","mapTypeId","infoWindowHtml","showInfoWindow","icon","showKeyWarnings","buildMap","data","googleMapsElem","length","each","i","elem","hasClass","addClass","append","GoogleMapsTurnOn","mapsLoadedPromise","fn","options","mapElement","get","promise","then","settings","extend","mapOptions","mapTypeControl","center","zoomControl","scaleControl","scrollwheel","google","maps","MapTypeId","map","Map","Marker","infoWindow","InfoWindow","content","event","addListener","open","addListenerOnce","jQueryProto","__proto__","fadeIn","not","$this","maddr","attr","linktext","after","hide","youtubeElem","off","on","iframeId","iframeElem","youtubeUrl","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","appC","appContent","activateAll","activateObfuscatedMails","activateFancybox","activateYouTubePreviews","monkeyPatchjQueryFade"],"mappings":"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","file":"scripts.min.js","sourcesContent":["/* Fancybox */\r\nexport function activateFancybox() {\r\n  // TODO: 2dm - must ask 2ro/2tl why different from gallery\r\n  // and if this won't break each other\r\n  if ($('.fancybox').fancybox) {\r\n    $('.fancybox').fancybox();\r\n  }\r\n}\r\n","// https://stackoverflow.com/a/28002292/6834738\r\nexport function getScript(source: string, callback: any) {\r\n  var script = document.createElement('script');\r\n  var prior = document.getElementsByTagName('script')[0];\r\n  (script as any).async = 1;\r\n\r\n  (script as any).onload = (script as any).onreadystatechange = function( _: any, isAbort: any ) {\r\n      if(isAbort || !(script as any).readyState || /loaded|complete/.test((script as any).readyState) ) {\r\n          script.onload = (script as any).onreadystatechange = null;\r\n          script = undefined;\r\n\r\n          if(!isAbort && callback) setTimeout(callback, 0);\r\n      }\r\n  };\r\n\r\n  script.src = source;\r\n  prior.parentNode.insertBefore(script, prior);\r\n}\r\n","import { getScript } from './get-script';\r\nimport { MapDefinition } from './google-maps/map-definition';\r\nimport { registerToGoogleMap as registerJQueryToGoogleMap } from './google-maps/maps-jquery';\r\n\r\nconst debug = true;\r\nconst winAny = window as any;\r\nconst globalCallbackName = 'appContentGoogleMapsCallback';\r\n\r\n/**\r\n * Class to load GoogleMaps and activate the jQuery.toGoogleMap(...) function. \r\n * When done, it will publish another method which can be called by all parts wanting to register a map using turnOn\r\n */\r\nexport class GoogleMapsTurnOn {\r\n\r\n  /** Status to track if activation already started (prevent multiple runs) */\r\n  alreadyActivating = false;\r\n\r\n  \r\n\r\n\r\n  activate(turnOn: any) {\r\n    debugger;\r\n    if(debug) console.log('activate');\r\n    console.log('data', turnOn);\r\n    // var apiKey = turnOn.data;\r\n  \r\n    // Change this GoogleApiKey. They are in the App-Settings. Read instructions here: https://azing.org/2sxc/r/ippFQYkz\r\n    if(!winAny.googleMapsApiKey) return;\r\n\r\n    // Prevent multiple inits in case this is triggered again\r\n    if(this.alreadyActivating) return;\r\n    this.alreadyActivating = true;\r\n  \r\n    // This promise will be triggered indirectly when Google Maps has loaded. It's used in the toGoogleMaps\r\n    const loadPromise = $.Deferred();\r\n    registerJQueryToGoogleMap(loadPromise, debug);\r\n  \r\n    // Load Google Maps if not already loading (prevent duplicate inits)\r\n    if (!winAny.googleMapsLoading) {\r\n      winAny.googleMapsLoading = true;\r\n      const keyWithoutWarning = winAny.googleMapsApiKey;\r\n      \r\n      // Callback which google-maps will trigger automatically when loaded\r\n      // we must be sure to not define this twice, as otherwise a second instance would overwrite our version\r\n      const thisInCallback = this;\r\n      if(!winAny[globalCallbackName]) winAny[globalCallbackName] = function() {\r\n        if(debug) console.log('googleMapLoadCallback');\r\n        loadPromise.resolve(true);\r\n\r\n        thisInCallback.activateTurnOnMap();\r\n      };\r\n\r\n      getScript(`//maps.google.com/maps/api/js?key=${keyWithoutWarning}&sensor=true&callback=${globalCallbackName}`, null);\r\n    }\r\n  \r\n\r\n  }\r\n\r\n  /** \r\n   * This is the signature of turnOn once it's initialized. \r\n   * It doesn't exist at first and will be activated when everything is ready.\r\n   * */\r\n  turnOnMap: (turnOn: any) => void;\r\n\r\n  /**\r\n   * Activate the turnOnMap command so this can be used from outside\r\n   */\r\n  private activateTurnOnMap(){\r\n    this.turnOnMap = function(turnOn: any) {\r\n      if(debug) console.log('turn on map', turnOn);\r\n      buildMap(turnOn.data);\r\n    };\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\nfunction buildMap({domId: id, marker, zoom, lat, lng, info, warn } : MapDefinition) {\r\n  console.log('build map', id, marker, arguments);\r\n\r\n  ($('#' + id) as any).toGoogleMap({\r\n    position: {\r\n      lat: lat,\r\n      lng: lng\r\n    },\r\n    zoom: zoom,\r\n    mapTypeId: \"ROADMAP\",\r\n    infoWindowHtml: info,\r\n    showInfoWindow: false,\r\n    icon: marker\r\n  });\r\n\r\n  if(warn) showKeyWarnings();\r\n};\r\n\r\nfunction showKeyWarnings() {\r\n  const googleMapsElem = $('.co-google-map-container');\r\n\r\n  // check if it's the original key, which shouldn't be used in live sites\r\n  // do not turn this off, it's important!\r\n  // to disable the warning, replace the API key as explained on //github.com/2sic/2sxc-content-bootstrap3/wiki/google-maps-api-key\r\n  if(googleMapsElem.length != 0)\r\n    googleMapsElem.each(function(i, elem) {\r\n      if (!$(elem).hasClass('has-warning')) {\r\n        $(elem).addClass('has-warning');\r\n        $(elem).append('<p class=\"alert alert-danger googlemap-apiwarning\"><strong>Warning:</strong> This map uses a demo API-Key, which will cause problems on live web sites. Change the GoogleApiKey using <a class=\"alert-link target=\"_blank\" href=\"https://azing.org/2sxc/r/ippFQYkz\" target=\"_blank\">these instructions</a></p>');\r\n      }\r\n    });\r\n}","// This will be attached to window once google is loaded\r\ndeclare const google : any;\r\n\r\n// the init-code\r\nexport function registerToGoogleMap(mapsLoadedPromise: JQuery.Deferred<any, any, any>, debug: boolean) {\r\n  if(debug) console.log('giveJqueryMaps-before');\r\n\r\n  // if this had already been run, stop here\r\n  if (($.fn as any).toGoogleMap) return;\r\n\r\n  if(debug) console.log('giveJqueryGoogleMaps-after check');\r\n\r\n\r\n  ($.fn as any).toGoogleMap = function (options: any) {\r\n      var mapElement = this.get(0);\r\n\r\n        mapsLoadedPromise.promise().then(function () {\r\n\r\n          var settings = $.extend({\r\n              position: {\r\n                  lat: 0,\r\n                  lng: 0\r\n              },\r\n              zoom: 8,\r\n              mapTypeId: \"HYBRID\",\r\n              infoWindowHtml: \"\",\r\n              showInfoWindow: true\r\n          }, options);\r\n\r\n          var mapOptions = {\r\n              zoom: settings.zoom,\r\n              mapTypeControl: true,\r\n              center: settings.position,\r\n              zoomControl: true,\r\n              scaleControl: true,\r\n              scrollwheel: false,\r\n              mapTypeId: google.maps.MapTypeId[settings.mapTypeId]\r\n          };\r\n\r\n          var map = new google.maps.Map(mapElement, mapOptions);\r\n\r\n          // Create Marker\r\n          var marker = new google.maps.Marker({\r\n              position: settings.position,\r\n              map: map,\r\n              icon: settings.icon\r\n          });\r\n\r\n          if (settings.infoWindowHtml && settings.infoWindowHtml !== '') {\r\n              // Create InfoWindow\r\n              var infoWindow = new google.maps.InfoWindow({\r\n                  content: settings.infoWindowHtml\r\n              });\r\n              // Add Event listener\r\n              google.maps.event.addListener(marker, 'click', function () {\r\n                  infoWindow.open(map, marker);\r\n              });\r\n          }\r\n\r\n          google.maps.event.addListenerOnce(map, 'idle', function () {\r\n              if (settings.showInfoWindow)\r\n                  infoWindow.open(map, marker);\r\n          });\r\n\r\n      });\r\n\r\n      return this;\r\n  };\r\n\r\n  if(debug) console.log('giveJqueryGoogleMaps-after');\r\n}","/** \r\n * In case jQuery slim is loaded, fadeIn is missing and would cause errors\r\n * So we check for that and just put an empty function there\r\n */\r\nexport function monkeyPatchjQueryFade() {\r\n  const jQueryProto = ($() as any).__proto__;\r\n  if(!jQueryProto.fadeIn)\r\n    jQueryProto.fadeIn = function () { /* do nothing */ }\r\n}","\r\nexport function activateObfuscatedMails() {\r\n  /* mailencrypting */\r\n  setTimeout(function () {\r\n    $('[data-madr1]').not('.madr-done').each(function () {\r\n      const $this = $(this);\r\n      const maddr = $this.attr('data-madr1') + '@' + $this.attr('data-madr2') + '.' + $this.attr('data-madr3');\r\n      const linktext = $this.attr('data-linktext') ? $this.attr('data-linktext') : maddr;\r\n      $this.after('<a href=\"mailto:' + maddr + '\">' + linktext + '</a> ');\r\n      $this.addClass('madr-done').hide();\r\n    });\r\n  }, 500);\r\n}","export function activateYouTubePreviews() {\r\n  var youtubeElem = $(\"[data-youtube^='iframe-']\");\r\n  // If youtube element is on page\r\n  if(youtubeElem.length != 0) {\r\n\r\n    // goes through all youtube elements\r\n    youtubeElem.each(function() {\r\n      // off removes click event - so its only added once\r\n      // add click event\r\n      $(this).off('click').on('click', function(){\r\n        var iframeId = $(this).data(\"youtube\");\r\n        var iframeElem = $(\"#\" + iframeId);\r\n        var youtubeUrl = iframeElem.data(\"youtube-src\");\r\n        iframeElem.attr(\"src\", youtubeUrl);\r\n        $(this).addClass('hide');\r\n      })\r\n    });  \r\n  }\r\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","import { monkeyPatchjQueryFade } from './jquery-fade-in';\r\nimport { activateObfuscatedMails } from './mail-obfuscator';\r\nimport { activateYouTubePreviews } from './youtube-preview';\r\nimport { activateFancybox } from './content-fancybox';\r\nimport { GoogleMapsTurnOn } from './google-maps';\r\n\r\n// so it can be called from the HTML when content re-initializes dynamically\r\nconst winAny = (window as any);\r\nconst appC = winAny.appContent = winAny.appContent || {};\r\n\r\nwinAny.appContent.maps = winAny.appContent.maps || new GoogleMapsTurnOn();\r\n\r\n/** activate all the content-app features */\r\nfunction activateAll() {\r\n  // console.log('activate all');\r\n  activateObfuscatedMails();\r\n  activateFancybox();\r\n  activateYouTubePreviews();\r\n  // activateGoogleMaps(appC);\r\n}\r\n\r\n// Work around a limitation of jQuery if it's installed in slim mode\r\n$(monkeyPatchjQueryFade);\r\n\r\nappC.activateAll = appC.activateAll || activateAll;\r\n\r\n// If loaded the first time on a dynamic page, activate automatically\r\n// Later reloads will need to call the activateAll from the reloaded content\r\n$(activateAll);\r\n"],"sourceRoot":""}