{"version":3,"file":"scripts.min.js","mappings":"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","sources":["webpack://2sic-bootstrap-content-templates/./src/ts/fancybox.ts","webpack://2sic-bootstrap-content-templates/./src/ts/get-script.ts","webpack://2sic-bootstrap-content-templates/./src/ts/google-maps/google-maps.ts","webpack://2sic-bootstrap-content-templates/./src/ts/google-maps/maps-jquery.ts","webpack://2sic-bootstrap-content-templates/./src/ts/mail-obfuscator.ts","webpack://2sic-bootstrap-content-templates/./src/ts/youtube-preview.ts","webpack://2sic-bootstrap-content-templates/webpack/bootstrap","webpack://2sic-bootstrap-content-templates/./src/ts/index.ts"],"sourcesContent":["declare let Fancybox: any;\r\n\r\nexport function initFancybox(module: any) {\r\n  Fancybox.bind(`[data-app-${module.type}-fancybox=\"${module.type}-${module.moduleId}\"]`, module.options);        \r\n}","// https://stackoverflow.com/a/28002292/6834738\r\nexport function getScript(source: string, callback: any) {\r\n  var script = document.createElement('script');\r\n  var prior = document.getElementsByTagName('script')[0];\r\n  (script as any).async = 1;\r\n\r\n  (script as any).onload = (script as any).onreadystatechange = function( _: any, isAbort: any ) {\r\n      if(isAbort || !(script as any).readyState || /loaded|complete/.test((script as any).readyState) ) {\r\n          script.onload = (script as any).onreadystatechange = null;\r\n          script = undefined;\r\n\r\n          if(!isAbort && callback) setTimeout(callback, 0);\r\n      }\r\n  };\r\n\r\n  script.src = source;\r\n  prior.parentNode.insertBefore(script, prior);\r\n}\r\n","import { getScript } from '../get-script';\r\nimport { MapDefinition } from './map-definition';\r\nimport { registerToGoogleMap as registerJQueryToGoogleMap } from './maps-jquery';\r\n\r\nconst debug = false;\r\nconst winAny = window as any;\r\nconst globalCallbackName = 'appContentGoogleMapsCallback';\r\n\r\n/**\r\n * Class to load GoogleMaps and activate the jQuery.toGoogleMap(...) function. \r\n * When done, it will publish another method which can be called by all parts wanting to register a map using turnOn\r\n */\r\nexport class GoogleMapsTurnOn {\r\n\r\n  /** \r\n   * This is the signature of turnOn once it's initialized. \r\n   * It doesn't exist at first and will be provided when everything is ready.\r\n   */\r\n  configureMap: (data: MapDefinition) => void;\r\n\r\n  /** Status to track if loading already started (prevent multiple runs) */\r\n  isLoading = false;\r\n\r\n  /** Load Google Maps and prepare for use */\r\n  load(apiKey: string) {\r\n    if(debug) console.log('activate', apiKey);\r\n    if(!apiKey) return;           // check api key exists\r\n    if(this.isLoading) return;    // Prevent multiple inits in case this is triggered again\r\n    this.isLoading = true;\r\n  \r\n    // This promise will be triggered indirectly when Google Maps has loaded. It's used in the toGoogleMaps\r\n    const loadPromise = $.Deferred();\r\n    registerJQueryToGoogleMap(loadPromise, debug);\r\n        \r\n    // Callback which google-maps will trigger automatically when loaded\r\n    // we must be sure to not define this twice, as otherwise a second instance would overwrite an initialized one\r\n    const thisInCallback = this;\r\n    if(!winAny[globalCallbackName]) winAny[globalCallbackName] = function() {\r\n      if(debug) console.log('googleMapLoadCallback');\r\n\r\n      // Resolve promise so the jQuery toGoogleMap can start working\r\n      loadPromise.resolve(true);\r\n      \r\n      // Now Activate the turnOnMap command so this can be used from outside\r\n      thisInCallback.configureMap = configureMap; \r\n    };\r\n\r\n    // Load the Google Maps scripts - will trigger the callback (see above)\r\n    getScript(`//maps.google.com/maps/api/js?key=${apiKey}&sensor=true&callback=${globalCallbackName}`, null);\r\n  }\r\n}\r\n\r\n\r\n\r\nfunction configureMap({domId, icon, zoom, lat, lng, info, warn } : MapDefinition) {\r\n  if(debug) console.log('build map', arguments);\r\n\r\n  ($('#' + domId) as any).toGoogleMap({\r\n    position: {\r\n      lat: lat,\r\n      lng: lng\r\n    },\r\n    zoom: zoom,\r\n    mapTypeId: \"ROADMAP\",\r\n    infoWindowHtml: info,\r\n    showInfoWindow: false,\r\n    icon: icon\r\n  });\r\n\r\n  if(warn) showKeyWarnings();\r\n};\r\n\r\nfunction showKeyWarnings() {\r\n  const googleMapsElem = $('.co-google-map-container');\r\n\r\n  // check if it's the original key, which shouldn't be used in live sites\r\n  // do not turn this off, it's important!\r\n  // to disable the warning, replace the API key as explained on //github.com/2sic/2sxc-content-bootstrap3/wiki/google-maps-api-key\r\n  if(googleMapsElem.length != 0)\r\n    googleMapsElem.each(function(i, elem) {\r\n      if (!$(elem).hasClass('has-warning')) {\r\n        $(elem).addClass('has-warning');\r\n        $(elem).append('<p class=\"alert alert-danger googlemap-apiwarning\"><strong>Warning:</strong> This map uses a demo API-Key, which will cause problems on live web sites. Change the GoogleApiKey using <a class=\"alert-link target=\"_blank\" href=\"https://azing.org/2sxc/r/ippFQYkz\" target=\"_blank\">these instructions</a></p>');\r\n      }\r\n    });\r\n}","// This will be attached to window once google is loaded\r\ndeclare const google : any;\r\n\r\n// the init-code\r\nexport function registerToGoogleMap(mapsLoadedPromise: JQuery.Deferred<any, any, any>, debug: boolean) {\r\n  if(debug) console.log('giveJqueryMaps-before');\r\n\r\n  // if this had already been run, stop here\r\n  if (($.fn as any).toGoogleMap) return;\r\n\r\n  if(debug) console.log('giveJqueryGoogleMaps-after check');\r\n\r\n\r\n  ($.fn as any).toGoogleMap = function (options: any) {\r\n      var mapElement = this.get(0);\r\n\r\n        mapsLoadedPromise.promise().then(function () {\r\n\r\n          var settings = $.extend({\r\n              position: {\r\n                  lat: 0,\r\n                  lng: 0\r\n              },\r\n              zoom: 8,\r\n              mapTypeId: \"HYBRID\",\r\n              infoWindowHtml: \"\",\r\n              showInfoWindow: true\r\n          }, options);\r\n\r\n          var mapOptions = {\r\n              zoom: settings.zoom,\r\n              mapTypeControl: true,\r\n              center: settings.position,\r\n              zoomControl: true,\r\n              scaleControl: true,\r\n              scrollwheel: false,\r\n              mapTypeId: google.maps.MapTypeId[settings.mapTypeId]\r\n          };\r\n\r\n          var map = new google.maps.Map(mapElement, mapOptions);\r\n\r\n          // Create Marker\r\n          var marker = new google.maps.Marker({\r\n              position: settings.position,\r\n              map: map,\r\n              icon: settings.icon\r\n          });\r\n\r\n          if (settings.infoWindowHtml && settings.infoWindowHtml !== '') {\r\n              // Create InfoWindow\r\n              var infoWindow = new google.maps.InfoWindow({\r\n                  content: settings.infoWindowHtml\r\n              });\r\n              // Add Event listener\r\n              google.maps.event.addListener(marker, 'click', function () {\r\n                  infoWindow.open(map, marker);\r\n              });\r\n          }\r\n\r\n          google.maps.event.addListenerOnce(map, 'idle', function () {\r\n              if (settings.showInfoWindow)\r\n                  infoWindow.open(map, marker);\r\n          });\r\n\r\n      });\r\n\r\n      return this;\r\n  };\r\n\r\n  if(debug) console.log('giveJqueryGoogleMaps-after');\r\n}","\r\nexport function showEncryptedMails() {\r\n  /* mailencrypting */\r\n  setTimeout(function () {\r\n    $('[data-madr1]').not('.madr-done').each(function () {\r\n      const $this = $(this);\r\n      const maddr = $this.attr('data-madr1') + '@' + $this.attr('data-madr2') + '.' + $this.attr('data-madr3');\r\n      const linktext = $this.attr('data-linktext') ? $this.attr('data-linktext') : maddr;\r\n      $this.after('<a href=\"mailto:' + maddr + '\">' + linktext + '</a> ');\r\n      $this.addClass('madr-done').hide();\r\n    });\r\n  }, 500);\r\n}","export function activateYouTubeInline() {\r\n  var youtubeElem = $(\"[data-youtube^='iframe-']\");\r\n  // If youtube element is on page\r\n  if(youtubeElem.length != 0) {\r\n\r\n    // goes through all youtube elements\r\n    youtubeElem.each(function() {\r\n      // off removes click event - so its only added once\r\n      // add click event\r\n      $(this).off('click').on('click', function(){\r\n        var iframeId = $(this).data(\"youtube\");\r\n        var iframeElem = $(\"#\" + iframeId);\r\n        var youtubeUrl = iframeElem.data(\"youtube-src\");\r\n        iframeElem.attr(\"src\", youtubeUrl);\r\n        $(this).addClass('hide');\r\n      })\r\n    });  \r\n  }\r\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","import { showEncryptedMails } from './mail-obfuscator';\r\nimport { activateYouTubeInline } from './youtube-preview';\r\nimport { GoogleMapsTurnOn } from './google-maps/google-maps';\r\nimport { initFancybox } from './fancybox';\r\n\r\n// so it can be called from the HTML when content re-initializes dynamically\r\nconst winAny = (window as any);\r\nwinAny.appContent = winAny.appContent || {};\r\nwinAny.appContent.maps = winAny.appContent.maps || new GoogleMapsTurnOn();\r\nwinAny.appContent.activateYouTubeInline = winAny.appContent.activateYouTubeInline || activateYouTubeInline;\r\nwinAny.appContent.showEncryptedMails = winAny.appContent.showEncryptedMails || showEncryptedMails;\r\nwinAny.appContent.initFancybox = initFancybox;\r\n\r\n"],"names":["module","Fancybox","bind","type","moduleId","options","source","callback","script","document","createElement","prior","getElementsByTagName","async","onload","onreadystatechange","_","isAbort","readyState","test","undefined","setTimeout","src","parentNode","insertBefore","debug","winAny","window","globalCallbackName","isLoading","load","apiKey","this","loadPromise","$","Deferred","thisInCallback","resolve","configureMap","getScript","domId","icon","zoom","lat","lng","info","warn","toGoogleMap","position","mapTypeId","infoWindowHtml","showInfoWindow","showKeyWarnings","googleMapsElem","length","each","i","elem","hasClass","addClass","append","GoogleMapsTurnOn","mapsLoadedPromise","console","log","fn","mapElement","get","promise","then","settings","extend","mapOptions","mapTypeControl","center","zoomControl","scaleControl","scrollwheel","google","maps","MapTypeId","map","Map","marker","Marker","infoWindow","InfoWindow","content","event","addListener","open","addListenerOnce","not","$this","maddr","attr","linktext","after","hide","youtubeElem","off","on","iframeId","data","iframeElem","youtubeUrl","__webpack_module_cache__","__webpack_require__","cachedModule","exports","__webpack_modules__","appContent","activateYouTubeInline","showEncryptedMails","initFancybox"],"sourceRoot":""}