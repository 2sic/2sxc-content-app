@inherits ToSic.Sxc.Dnn.RazorComponent
@using ToSic.Razor.Blade;

@{
	// get helper commands
	var locationHelper = CreateInstance("_LocationHelper.cshtml");
	// run helper command
	var mapInfo = locationHelper.MapInfos(Content);
	// we need a unique ID for the map, in case there are many on the same page
	var mapId = Dnn.Module.ModuleID;
}
@locationHelper.AddGoogleMapsKey()

<div class="max-w-full mb-10 text-left md:mb-16">
	<div @Edit.TagToolbar(Content)>
 		<div class="grid grid-cols-1 gap-4 md:gap-8 md:grid-cols-2">
      <div class="md:order-6 flex items-center">
        <address class="not-italic" itemscope itemtype="http://schema.org/LocalBusiness">
        <div class="mb-2.5 pr-md-5" itemprop="name">
          <h4 class="mb-2.5 text-2xl font-bold">@Content.Company</h4>
          @if (Text.Has(Content.Description))
          {
            <div class="leading-relaxed" itemprop="description">@Html.Raw(Content.Description)</div>
          }
        </div>
        <div class="mb-3" itemprop="address" itemscope itemtype="http://schema.org/PostalAddress">
          @if (Text.Has(Content.Street))
          {
            <span itemprop="streetAddress">
            @if (Text.Has(Content.Street))
            {
              @Html.Raw(Tags.Nl2Br(Content.Street))<br>
            }
            </span>
          }
          @if (Text.Has(Content.City))
          {
            if (Text.Has(Content.ZipCode))
            {
              <span itemprop="postalCode">@Content.ZipCode</span>
            }
          <span itemprop="addressLocality">@Content.City</span><br>
          }
          @if (Text.Has(Content.Country))
          {
          <span itemprop="addressCountry">@Content.Country</span><br>
          }
        </div>
        <div>
          @if (Text.Has(Content.Mail))
          {
            <div itemprop="email">
              <span class="fas fa-envelope"></span>
              <span class="text-primary-500 hover:text-primary-800 hover:underline">@RenderPage("../shared/_TryToEncryptMail.cshtml", new { email = Content.Mail })</span>
            </div>
          }
          @if (Text.Has(Content.Tel))
          {
            <span class="fas fa-phone" aria-hidden="true"></span> <a class="text-primary-500 hover:text-primary-800 hover:underline" href="tel:@Content.Tel.Replace(" ", "")" itemprop="telephone">@Content.Tel</a><br/>
          }
          @if (Text.Has(Content.Fax))
          {
            <span class="fas fa-fax" aria-hidden="true"></span> <span itemprop="faxNumber">@Content.Fax</span><br/>
          }
          @if (Text.Has(Content.LabelDirections))
          {
            <span class="fas fa-map-marker-alt"></span> <a class="text-primary-500 hover:text-primary-800 hover:underline" target="_blank" href="@mapInfo.DirectionUrl">@Content.LabelDirections</a>
          }
        </div>
        </address>
      </div>
      <div class="md:order-1">
        <div class="co-google-map-container relative block w-full overflow:hidden aspect-w-16 aspect-h-9">
          <div class="absolute inset-0 w-full h-full border-0" id="GoogleMap-@mapId"></div>
        </div>
      </div>
    </div>
  </div>
</div>

@RenderPage("../shared/_Assets.cshtml", new { parts = "styles,scripts,icons"})
@RenderPage("_LocationScript.cshtml", new { markerImage = Content.Presentation.MarkerImage, mapId = mapId, mapInfo = mapInfo, company = Content.Company })