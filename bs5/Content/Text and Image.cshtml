@inherits Custom.Hybrid.RazorTyped

@*  This Template is used in ca. 5 Views which show title, text and image  *@

@* Show list header if necessary for configuration *@
@Html.Partial("../shared/Content List Header.cshtml")

@{
  // define dom attribute for fancybox
  var fancyboxAttribute = "app-content-fancybox-group";

  // Determine the widths of each part, based on 12 Bootstrap columns
  var initialTextFirst = MyView.Settings.Bool("TextFirst");
  var cols = MyView.Settings.Int("ColsElement1");
  var colsText = initialTextFirst ? cols : 12 - cols;
  var colsImg = 12 - colsText;
  var showImgBetweenTitleAndText = colsImg == 0; // if image has 0 columns, it's between title / text
  var alternatePositions = MyHeader.Bool("AlternatePositions");

  // Prepare items to show, count and index to find the last item (for styling)
  var allItems = AsItems(MyData);
  var itemsCount = allItems.Count();
  var itemIndex = 0;
}

@* Show all the content-items - one or more *@
@foreach (var item in allItems) {
  itemIndex++;
  // Figure out if the current iteration has the text first
  var thisTextFirst = alternatePositions ? (initialTextFirst ^ (itemIndex % 2) == 0) : initialTextFirst;

  // if last item, add class to the row to add margin-bottom
  var rowClass = itemIndex == itemsCount ? "mb-4 mb-lg-5" : "";

  <div class='row @rowClass' @Kit.Toolbar.Default(item)>
    <div class='col-md-@colsText order-md-@(thisTextFirst ? "first" : "last")'>

      @* call sub-template to show the title with the correct H1-H6 tag *@
      @Html.Partial("../shared/Header tag.cshtml", new { Item = item, HeadingType = item.Presentation.String("HeadingType") })
      @if (showImgBetweenTitleAndText) {
        @Html.Partial("Text and Image.Part-Image.cshtml", new { Item = item })
      }
      @item.Html("Text", toolbar: false)
    </div>

    @* If the image has it's own column, it's here *@
    @if (!showImgBetweenTitleAndText) {
      <div class='col-md-@colsImg order-md-@(!thisTextFirst ? "first" : "last")'>
        @* call sub-template to show the image with all possible options *@
        @Html.Partial("Text and Image.Part-Image.cshtml", new { Item = item, Columns = colsImg, FancyboxAttribute = fancyboxAttribute})
      </div>
    }
  </div>
}

@Html.Partial("../shared/Assets.cshtml", new { parts = "scripts"})
@Html.Partial("../shared/FancyboxAssets.cshtml", new { FancyboxAttribute = fancyboxAttribute })
