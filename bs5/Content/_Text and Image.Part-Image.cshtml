@inherits Custom.Hybrid.Razor12
@using ToSic.Razor.Blade;
@using ToSic.Sxc.Services;
@{
  /* This is a partial template which is re-used in the Content-Templates */

  // Parameter passed in from the calling page - if we don't have an image, exit
  var imgItem = DynamicModel.Item;  // The content-item with the image
  if (!Text.Has(imgItem.Image)) { return; }

  var imgField = imgItem.Field("Image");

  // Figure out width of the image based on max-width of a content-image and 12 Bootstrap Columns
  // The resulting value will be something like "12/12" or "4/12" which is used by the Link.Image(...)
  var resizeFactor = (DynamicModel.Columns ?? 12) + "/12";

  // prepare the title, either the default or the additional image caption
  var lightboxCaption = "";
  if (imgItem.Presentation.TitleLightbox != false) {
    lightboxCaption = Text.First(imgField.Metadata.Description, imgItem.Title);
  }

  var wrapInLink = imgItem.Presentation.ImageLightbox != false;

  var imgSvc = GetService<IImageService>();
}

@if (wrapInLink) {
  var lbPic = imgSvc.Picture(imgItem.Field("Image"), settings: "Lightbox");
  @:<a @DynamicModel.FancyboxAttribute data-src="@imgItem.Image" data-srcset="@lbPic.SrcSet" data-sizes="@lbPic.Sizes" data-preload="false" data-caption="@lightboxCaption">
}
  <figure class='@(imgItem.Presentation.ImageLightbox != false ? "effect-zoom" : "")'>
    @if (Text.Has(imgField.Metadata.Description)) {
      <figcaption class="pt-1 px-4 pb-4 text-white">@imgField.Metadata.Description</figcaption>
    }
    @imgSvc.Picture(imgItem.Field("Image"), settings: "Content", factor: resizeFactor)
  </figure>
@if (wrapInLink) {
  @:</a>
}
