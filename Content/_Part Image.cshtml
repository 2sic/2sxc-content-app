@inherits Custom.Hybrid.Razor12
@using ToSic.Razor.Blade;
@{
  /* This is a partial template which is re-used in the Content-Templates */

  // Parameter passed in from the calling page - if we don't have an image, exit
  var imgItem = DynamicModel.Item;  // The content-item with the image
  if(!Text.Has(imgItem.Image)) { return; }

  // Figure out width of the image based on max-width of a content-image
  const int bsColumns = 12;
  var imgColumns = (int)(DynamicModel.Columns ?? bsColumns);
  var width = (int)(Settings.Images.Content.Width * imgColumns / bsColumns);

  // configuration
  var lightbox = Settings.Images.Lightbox;
  var quality = (int)Settings.Images.Content.Quality;

  // prepare the title, either the default or the additional image caption
  var lightboxCaption = "";
  if(imgItem.Presentation.TitleLightbox != false){
    lightboxCaption = Text.First(imgItem.ImageCaption, imgItem.Title);
  }
}
@if(imgItem.Presentation.ImageLightbox != false) {
  @:<a data-fancybox href='@Tags.SafeUrl(imgItem.Image + "?mode=" + lightbox.ResizeMode + "&w=" + lightbox.Width + "&h=" + lightbox.Height + "&quality=" + lightbox.Quality)' data-caption="@lightboxCaption">
}
  <figure>
    <div class="overlay w-100 h-100"></div>
    @if(Text.Has(imgItem.ImageCaption)){
      <figcaption class="pt-1 px-4 pb-4 text-white">@imgItem.ImageCaption</figcaption>
    }

    <img class="img-fluid" src='@Tags.SafeUrl(imgItem.Image + "?w=" + width + "&scale=both&quality=" + quality)' alt="@Text.First(imgItem.ImageCaption, imgItem.Title)" />
  </figure>
@if(imgItem.Presentation.ImageLightbox != false) {
  @:</a>
}
