@using Connect.Koi;

@*
    A helper utility to render a picture tag with all sizes.
    Parameters:
    * imageSrc: the image source path
    * imageRatio: the image ratio, e.g. for 4:3: 4.0/3.0 (attention: needs the .0 to be treated as double; use 0 to disable height restriction)
    * qualityDefault: used for the 1x and fallback image; usually a higher value than qualityHighRes, e.g. 95
    * qualityHighRes: used for sizes > 1, e.g. 85
    * defaultParameters: define additional parameters like crop and scale
    * alternativeText: the image alternate text
    * sizes: the array which defines the sizes for each breakpoint, e.g. new [] { xs, sm, md, lg }
    Example:
    @{
        var helper = CreateInstance("_Helper-Picture.cshtml");
    }
    @(helper.Picture(Content.Image, 4.0/3.0, 95, 85, "mode=crop&scale=both", Content.Title, new[] { 720, 464, 244, 290, 390 }))
*@
@helper Picture(string imageSrc, double imageRatio, int qualityDefault, int qualityHighRes, string defaultParameters, string alternativeText, int[] sizes)
{
    // Global settings
    var sets = new[] { 1.0, 1.5, 2.0, 3.0, 4.0 };

    // Breakpoints
    var breakpoints = new[] { 0, 576, 768, 992, 1200 }; /* Bootstrap 4 and all others */
    if(Koi.Is("bs3")) {
        breakpoints = new[] { 0, 768, 992, 1200 }; /* Bootstrap 3 */
    }

    <picture>
        @for (var i = 0; i < breakpoints.Length; i++)
        {
            var minWidth = breakpoints[i];
            var maxWidth = (minWidth == breakpoints.Last() ? 0 : (breakpoints[i+1] - 1));
            var size = sizes.Count() > i ? sizes[i] : sizes.Last();

            var srcSet = String.Join(", ", sets.Select(s => 
                imageSrc + "?w=" + Math.Round(size * s) +
                (imageRatio != 0 ? "&h=" + Math.Round(size * s / imageRatio) : "") +
                "&quality=" + (s == 1 ? qualityDefault : qualityHighRes) +
                "&" + defaultParameters + " "
                + s.ToString(System.Globalization.CultureInfo.InvariantCulture) + "x"));

            <source media="(min-width: @(minWidth)px)@(maxWidth != 0 ? " and (max-width: " + maxWidth + "px)" : "")"
                    srcset="@srcSet" />
        }
        @* Fallback image for browsers not supporting the picture element *@
        <img @Koi.Class("bs3='img-responsive' bs4,oth='img-fluid'") src="@imageSrc?w=@(sizes[0])&h=@(Math.Round(sizes[0] / imageRatio))&quality=@qualityDefault&@defaultParameters" alt="@alternativeText" />
    </picture>
}