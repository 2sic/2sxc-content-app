<link rel="stylesheet" href="@App.Path/dist/styles.css" data-enableoptimizations="true" />
<script type="text/javascript" src="@App.Path/dist/scripts.js" data-enableoptimizations="true"></script>

<div class="sc-element co-contactmap ly-margin-bottom">
	@Content.Toolbar
	<div class="row">
		<div class="col-sm-6">
		<address itemscope itemtype="http://schema.org/LocalBusiness">
			<div class="co-company" itemprop="name">
				<strong>@Content.Company<br/>
				@Content.CompanyAdd</strong>
			</div>
			<div class="co-address" itemprop="address" itemscope itemtype="http://schema.org/PostalAddress">
				@if (!String.IsNullOrEmpty(Content.Street) || !String.IsNullOrEmpty(Content.Street2)) {
					<span itemprop="streetAddress">
					@if (!String.IsNullOrEmpty(Content.Street)) {
						<text>@Content.Street<br></text>
					}
					@if (!String.IsNullOrEmpty(Content.Street2)) {
						<text>@Content.Street2<br/></text>
					}
					</span>
				}
				@if (!String.IsNullOrEmpty(Content.City)) {
					if (!String.IsNullOrEmpty(Content.ZipCode)) {
						<text><span itemprop="postalCode">@Content.ZipCode</span> </text>
					}
					<span itemprop="addressLocality">@Content.City</span><br>
				}
				@if (!String.IsNullOrEmpty(Content.Country)) {
					<span itemprop="addressCountry">@Content.Country</span><br>
				}
				@{
					var directionurl = "https://maps.google.com/maps?daddr="+Content.Street.Replace(" ", "+")+"+"+Content.ZipCode.Replace(" ", "+")+"+"+Content.City.Replace(" ", "+")+"+"+Content.Country.Replace(" ", "+")+"&amp;saddr=&amp;f=d&amp;hl=de&amp;ie=UTF8&amp;z=16";
					if (Convert.ToInt32(Content.GPSLng) > 0){
						directionurl = "https://www.google.com/maps/dir//"+Content.GPSLat.ToString().Replace(',', '.')+","+Content.GPSLng.ToString().Replace(',', '.');
					}
				}
				@if(!String.IsNullOrEmpty(Content.LabelDirections)){
					<span class="glyphicon glyphicon-map-marker"></span> <a target="_blank" href="@directionurl">@Content.LabelDirections</a>
				}
			</div>
			<div class="co-details">
				@if (!String.IsNullOrEmpty(Content.Mail)) {
					var isValid = new System.Text.RegularExpressions.Regex("^[^@]+@[^@]+\\.[^\\.]+$").IsMatch(Content.Mail);
					if(isValid){
						var madr = Content.Mail.Split('@');
						var madrSuf = new System.Text.RegularExpressions.Regex("\\.([^\\.]+)$").Split(madr[1]);
						<span itemprop="email">
							<span class="glyphicon glyphicon-envelope"></span> <span data-madr1="@madr[0]" data-madr2="@madrSuf[0]" data-madr3="@madrSuf[1]"></span>
						</span>
					} else {
						<span class="glyphicon glyphicon-envelope"></span> <span itemprop="email">@Content.Mail</span>
					}
					<br/>
				}
				@if (!String.IsNullOrEmpty(Content.Tel)) {
					<span class="glyphicon glyphicon-phone" aria-hidden="true"></span> <a href="tel:@Content.Tel.Replace(" ", "")" itemprop="telephone">@Content.Tel</a><br/>
				}
				@if (!String.IsNullOrEmpty(Content.Fax)) {
					<span class="glyphicon glyphicon-print" aria-hidden="true"></span> <span itemprop="faxNumber">@Content.Fax</span><br/>
				}
			</div>
			@if (!String.IsNullOrEmpty(Content.Description)) {
				<div class="co-description" itemprop="description">@Html.Raw(Content.Description)</div>
			}
		</address>
		</div>
		<div class="col-sm-6">
			<div class="embed-responsive embed-responsive-16by9 sc-element co-google-map-container">
				<div class="co-google-map embed-responsive-item" id="GoogleMap-@Dnn.Module.ModuleID">
				</div>
			</div>
		</div>
	</div>
</div>


<script type="text/javascript" src="@App.Path/dist/google-map.js"></script>
<script type="text/javascript">
	$("#GoogleMap-@(Dnn.Module.ModuleID)").toGoogleMap({
		position: {
			lat: @Content.GPSLat.ToString().Replace(',', '.'),
			lng: @Content.GPSLng.ToString().Replace(',', '.')
		},
		zoom: @Presentation.Zoom,
		mapTypeId: "ROADMAP",
		infoWindowHtml: "@Content.Company",
		showInfoWindow: false
	});
</script>